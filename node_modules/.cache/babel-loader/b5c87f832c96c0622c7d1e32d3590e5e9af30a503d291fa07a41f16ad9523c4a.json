{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nconst initialState = {\n  totalPrice: 0,\n  items: []\n};\nexport const cartSlice = createSlice({\n  name: 'cart',\n  initialState,\n  reducers: {\n    addItem: (state, action) => {\n      const findItem = state.items.find(obj => obj.id === action.payload.id);\n      if (findItem) {\n        findItem.count++;\n      } else {\n        state.items.push({\n          ...action.payload,\n          count: 1\n        });\n      }\n      state.totalPrice = state.items.reduce((sum, obj) => obj.price + sum * obj.count, 0);\n    },\n    removeItem: (state, action) => {\n      state.items = state.items.filter(obj => obj.id !== action.payload);\n    },\n    clearItems: state => {\n      state.items = [];\n    }\n  }\n});\nexport const {\n  addItem,\n  removeItem,\n  clearItems\n} = cartSlice.actions;\nexport default cartSlice.reducer;","map":{"version":3,"names":["createSlice","initialState","totalPrice","items","cartSlice","name","reducers","addItem","state","action","findItem","find","obj","id","payload","count","push","reduce","sum","price","removeItem","filter","clearItems","actions","reducer"],"sources":["D:/Downloads/Computer-science/MyProject/react-pizza/src/redux/slices/cartSlice.js"],"sourcesContent":["import { createSlice } from '@reduxjs/toolkit'\r\n\r\nconst initialState = {\r\n    totalPrice: 0,\r\n    items: [],\r\n}\r\n\r\nexport const cartSlice = createSlice({\r\n    name: 'cart',\r\n    initialState,\r\n    reducers: {\r\n        addItem: (state, action) => {\r\n            const findItem = state.items.find((obj) => obj.id === action.payload.id)\r\n            if(findItem) {\r\n                findItem.count ++\r\n            } else {\r\n                state.items.push({\r\n                    ...action.payload,\r\n                    count: 1\r\n                })\r\n            }\r\n\r\n\r\n            state.totalPrice = state.items.reduce((sum, obj) => obj.price + sum * obj.count, 0)\r\n        },\r\n        removeItem: (state, action) => {\r\n            state.items = state.items.filter((obj) => obj.id !== action.payload)\r\n        },\r\n        clearItems: (state) => {\r\n            state.items = []\r\n        },\r\n    },\r\n})\r\n\r\nexport const { addItem, removeItem, clearItems } = cartSlice.actions\r\n\r\nexport default cartSlice.reducer"],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAE9C,MAAMC,YAAY,GAAG;EACjBC,UAAU,EAAE,CAAC;EACbC,KAAK,EAAE;AACX,CAAC;AAED,OAAO,MAAMC,SAAS,GAAGJ,WAAW,CAAC;EACjCK,IAAI,EAAE,MAAM;EACZJ,YAAY;EACZK,QAAQ,EAAE;IACNC,OAAO,EAAE,CAACC,KAAK,EAAEC,MAAM,KAAK;MACxB,MAAMC,QAAQ,GAAGF,KAAK,CAACL,KAAK,CAACQ,IAAI,CAAEC,GAAG,IAAKA,GAAG,CAACC,EAAE,KAAKJ,MAAM,CAACK,OAAO,CAACD,EAAE,CAAC;MACxE,IAAGH,QAAQ,EAAE;QACTA,QAAQ,CAACK,KAAK,EAAG;MACrB,CAAC,MAAM;QACHP,KAAK,CAACL,KAAK,CAACa,IAAI,CAAC;UACb,GAAGP,MAAM,CAACK,OAAO;UACjBC,KAAK,EAAE;QACX,CAAC,CAAC;MACN;MAGAP,KAAK,CAACN,UAAU,GAAGM,KAAK,CAACL,KAAK,CAACc,MAAM,CAAC,CAACC,GAAG,EAAEN,GAAG,KAAKA,GAAG,CAACO,KAAK,GAAGD,GAAG,GAAGN,GAAG,CAACG,KAAK,EAAE,CAAC,CAAC;IACvF,CAAC;IACDK,UAAU,EAAE,CAACZ,KAAK,EAAEC,MAAM,KAAK;MAC3BD,KAAK,CAACL,KAAK,GAAGK,KAAK,CAACL,KAAK,CAACkB,MAAM,CAAET,GAAG,IAAKA,GAAG,CAACC,EAAE,KAAKJ,MAAM,CAACK,OAAO,CAAC;IACxE,CAAC;IACDQ,UAAU,EAAGd,KAAK,IAAK;MACnBA,KAAK,CAACL,KAAK,GAAG,EAAE;IACpB;EACJ;AACJ,CAAC,CAAC;AAEF,OAAO,MAAM;EAAEI,OAAO;EAAEa,UAAU;EAAEE;AAAW,CAAC,GAAGlB,SAAS,CAACmB,OAAO;AAEpE,eAAenB,SAAS,CAACoB,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}