{"ast":null,"code":"export {};","map":{"version":3,"names":[],"sources":["D:/Downloads/Computer-science/MyProject/react-pizza/src/redux/slices/cartSlice.ts"],"sourcesContent":[" import { createSlice, PayloadAction } from '@reduxjs/toolkit'\r\n// import { calcTotalPrice } from '../../utils/calcTotalPrice'\r\n// import { GetCartFromLs } from '../../utils/getCartFromLS'\r\n// import { RootState } from '../store'\r\n//\r\n//\r\n//\r\n// const { items, totalPrice } = GetCartFromLs()\r\n//\r\n// const initialState: CartSliceState = {\r\n//     totalPrice,\r\n//     items,\r\n// }\r\n//\r\n// export const cartSlice = createSlice({\r\n//     name: 'cart',\r\n//     initialState,\r\n//     reducers: {\r\n//         addItem: (state, action:PayloadAction<CartItem>) => {\r\n//             const findItem = state.items.find((obj) => obj.id === action.payload.id)\r\n//             if(findItem) {\r\n//                 findItem.count ++\r\n//             } else {\r\n//                 state.items.push({\r\n//                     ...action.payload,\r\n//                     count: 1\r\n//                 })\r\n//             }\r\n//\r\n//\r\n//             state.totalPrice = calcTotalPrice(state.items)\r\n//         },\r\n//\r\n//         minusItem: (state, action: PayloadAction<string>) => {\r\n//             const findItem = state.items.find((obj) => obj.id === action.payload)\r\n//             if(findItem) {\r\n//                 findItem.count --\r\n//             }\r\n//             state.totalPrice = state.items.reduce((sum, obj) => (obj.price * obj.count) + sum, 0)\r\n//\r\n//         },\r\n//\r\n//         removeItem: (state, action: PayloadAction<string>) => {\r\n//             state.items = state.items.filter((obj) => obj.id !== action.payload)\r\n//             state.totalPrice = state.items.reduce((sum, obj) => (obj.price * obj.count) + sum, 0)\r\n//         },\r\n//         clearItems: (state) => {\r\n//             state.items = []\r\n//             state.totalPrice = 0\r\n//         },\r\n//     },\r\n// })\r\n//\r\n// export const selectCart = (state: RootState) => state.cart;\r\n// export const selectCartItemById =(id: string) => (state: RootState) => state.cart.items.find((obj) => obj.id === id)\r\n//\r\n// export const { addItem, removeItem, clearItems, minusItem } = cartSlice.actions\r\n//\r\n// export default cartSlice.reducer"],"mappings":""},"metadata":{},"sourceType":"module","externalDependencies":[]}