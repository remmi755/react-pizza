{"ast":null,"code":"var _jsxFileName = \"D:\\\\Downloads\\\\Computer-science\\\\MyProject\\\\react-pizza\\\\src\\\\pages\\\\Home.jsx\",\n  _s = $RefreshSig$();\nimport React, { useContext, useEffect, useState } from 'react';\nimport axios from 'axios';\nimport qs from 'qs';\nimport { useNavigate } from 'react-router-dom';\nimport { SearchContext } from '../App';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { setCurrentPage, setFilters } from '../redux/slices/filrerSlice';\nimport Categories from '../components/Categories';\nimport Sort from '../components/Sort';\nimport PizzaBlock from '../components/PizzaBlock';\nimport Skeleton from '../components/PizzaBlock/Skeleton';\nimport Pagination from '../components/Pagination';\nimport { listPopup } from '../components/Sort';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Home = () => {\n  _s();\n  const navigate = useNavigate();\n  const dispatch = useDispatch();\n  // const categoryId = useSelector((state) => state.filter.categoryId)\n  // const sortType = useSelector((state) => state.filter.sort.sortProperty)\n  // const currentPage = useSelector((state) => state.filter.currentPage)\n  const {\n    categoryId,\n    sort,\n    currentPage\n  } = useSelector(state => state.filter);\n  console.log(sort);\n  const {\n    searchValue\n  } = useContext(SearchContext);\n  const [items, setItems] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const sortBy = sort.sortProperty.replace('-', '');\n  const order = sort.sortProperty.includes('-') ? 'asc' : 'desc';\n  const category = categoryId > 0 ? `category=${categoryId}` : '';\n  const search = searchValue ? `&search=${searchValue}` : '';\n  useEffect(() => {\n    if (window.location.search) {\n      const params = qs.parse(window.location.search.substring(1));\n      const sort = listPopup.find(obj => obj.sortProperty === params.sortProperty);\n      dispatch(setFilters({\n        ...params,\n        sort\n      }));\n    }\n  }, []);\n  useEffect(() => {\n    setIsLoading(true);\n    axios.get(`https://636be6427f47ef51e13d6ea3.mockapi.io/items?page=${currentPage}&limit=4&${category}&sortBy=${sortBy}&order=${order}${search}`).then(res => {\n      setItems(res.data);\n      setIsLoading(false);\n    });\n    window.scrollTo(0, 0);\n  }, [categoryId, sort.sortProperty, searchValue, currentPage]);\n  useEffect(() => {\n    const queryString = qs.stringify({\n      sortProperty: sort.sortProperty,\n      categoryId,\n      currentPage\n    });\n    navigate(`?${queryString}`);\n  }, [categoryId, sort.sortProperty, currentPage]);\n  const pizzas = items.map((obj, index) => /*#__PURE__*/_jsxDEV(PizzaBlock, {\n    ...obj\n  }, index, false, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 9\n  }, this));\n  const skeletons = [...new Array(6)].map((_, index) => /*#__PURE__*/_jsxDEV(Skeleton, {}, index, false, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 9\n  }, this));\n  const onChangePage = number => {\n    dispatch(setCurrentPage(number));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"content__top\",\n      children: [/*#__PURE__*/_jsxDEV(Categories, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Sort, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"content__title\",\n      children: \"\\u0412\\u0441\\u0435 \\u043F\\u0438\\u0446\\u0446\\u044B\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"content__items\",\n      children: isLoading ? skeletons : pizzas\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Pagination, {\n      currentPage: currentPage,\n      onChangePage: onChangePage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 85,\n    columnNumber: 9\n  }, this);\n};\n_s(Home, \"B3Vtg6RWcRDHrccEdSzAi2yNdIw=\", false, function () {\n  return [useNavigate, useDispatch, useSelector];\n});\n_c = Home;\nexport default Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["React","useContext","useEffect","useState","axios","qs","useNavigate","SearchContext","useSelector","useDispatch","setCurrentPage","setFilters","Categories","Sort","PizzaBlock","Skeleton","Pagination","listPopup","Home","navigate","dispatch","categoryId","sort","currentPage","state","filter","console","log","searchValue","items","setItems","isLoading","setIsLoading","sortBy","sortProperty","replace","order","includes","category","search","window","location","params","parse","substring","find","obj","get","then","res","data","scrollTo","queryString","stringify","pizzas","map","index","skeletons","Array","_","onChangePage","number"],"sources":["D:/Downloads/Computer-science/MyProject/react-pizza/src/pages/Home.jsx"],"sourcesContent":["import React, { useContext, useEffect, useState } from 'react'\nimport axios from 'axios'\nimport qs from 'qs'\nimport { useNavigate } from 'react-router-dom'\n\nimport { SearchContext } from '../App'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { setCurrentPage, setFilters } from '../redux/slices/filrerSlice'\n\nimport Categories from '../components/Categories'\nimport Sort from '../components/Sort'\nimport PizzaBlock from '../components/PizzaBlock'\nimport Skeleton from '../components/PizzaBlock/Skeleton'\nimport Pagination from '../components/Pagination'\nimport {listPopup} from '../components/Sort'\n\nconst Home = () => {\n    const navigate = useNavigate()\n    const dispatch = useDispatch()\n    // const categoryId = useSelector((state) => state.filter.categoryId)\n    // const sortType = useSelector((state) => state.filter.sort.sortProperty)\n    // const currentPage = useSelector((state) => state.filter.currentPage)\n    const { categoryId, sort, currentPage } = useSelector((state) => state.filter\n    )\nconsole.log(sort)\n    const { searchValue } = useContext(SearchContext)\n    const [items, setItems] = useState([])\n    const [isLoading, setIsLoading] = useState(true)\n\n    const sortBy = sort.sortProperty.replace('-', '')\n    const order = sort.sortProperty.includes('-') ? 'asc' : 'desc'\n    const category = categoryId > 0 ? `category=${categoryId}` : ''\n    const search = searchValue ? `&search=${searchValue}` : ''\n\n    useEffect(() => {\n        if (window.location.search) {\n            const params = qs.parse(window.location.search.substring(1))\n\n            const sort = listPopup.find((obj) => obj.sortProperty === params.sortProperty)\n\n            dispatch(\n                setFilters({\n                    ...params,\n                    sort\n                }))\n        }\n    }, [])\n\n    useEffect(() => {\n        setIsLoading(true)\n        axios\n            .get(\n                `https://636be6427f47ef51e13d6ea3.mockapi.io/items?page=${currentPage}&limit=4&${category}&sortBy=${sortBy}&order=${order}${search}`\n            )\n            .then((res) => {\n                setItems(res.data)\n                setIsLoading(false)\n            })\n        window.scrollTo(0, 0)\n    }, [categoryId, sort.sortProperty, searchValue, currentPage])\n\n    useEffect(() => {\n        const queryString = qs.stringify({\n            sortProperty: sort.sortProperty,\n            categoryId,\n            currentPage,\n        })\n\n        navigate(`?${queryString}`)\n    }, [categoryId, sort.sortProperty, currentPage])\n\n    const pizzas = items.map((obj, index) => (\n        <PizzaBlock key={index} {...obj} />\n    ))\n\n    const skeletons = [...new Array(6)].map((_, index) => (\n        <Skeleton key={index} />\n    ))\n\n    const onChangePage = (number) => {\n        dispatch(setCurrentPage(number))\n    }\n\n    return (\n        <div className=\"container\">\n            <div className=\"content__top\">\n                <Categories />\n                <Sort />\n            </div>\n            <h2 className=\"content__title\">Все пиццы</h2>\n            <div className=\"content__items\">\n                {isLoading ? skeletons : pizzas}\n            </div>\n            <Pagination currentPage={currentPage} onChangePage={onChangePage} />\n        </div>\n    )\n}\n\nexport default Home\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}