{"ast":null,"code":"import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\nimport axios from 'axios';\nexport const fetchPizzas = createAsyncThunk('pizza/fetchPizzasStatus', async params => {\n  const {\n    sortBy,\n    order,\n    category,\n    search,\n    currentPage\n  } = params;\n  const {\n    data\n  } = await axios.get(`https://636be6427f47ef51e13d6ea3.mockapi.io/items?page=${currentPage}&limit=4&${category}&sortBy=${sortBy}&order=${order}${search}`);\n  return data;\n});\nconst initialState = {\n  items: [],\n  status: Status.LOADING\n};\nexport const pizzaSlice = createSlice({\n  name: 'pizza',\n  initialState,\n  reducers: {\n    setItems: (state, action) => {\n      state.items = action.payload;\n    }\n  },\n  extraReducers: builder => {\n    builder.addCase(fetchPizzas.pending, state => {\n      state.status = Status.LOADING;\n      state.items = [];\n    });\n    builder.addCase(fetchPizzas.fulfilled, (state, action) => {\n      state.items = action.payload;\n      state.status = Status.SUCCESS;\n    });\n    builder.addCase(fetchPizzas.rejected, state => {\n      state.status = Status.ERROR;\n      state.items = [];\n    });\n  }\n  // extraReducers: {\n  //     [fetchPizzas.pending]: (state) => {\n  //         state.status = 'loading'\n  //         state.items = []\n  //     },\n  //     [fetchPizzas.fulfilled]: (state, action) => {\n  //         state.items = action.payload\n  //         state.status = 'success'\n  //     },\n  //     [fetchPizzas.rejected]: (state) => {\n  //         state.status = 'error'\n  //         state.items = []\n  //     },\n  // },\n});\n\nexport const {\n  setItems\n} = pizzaSlice.actions;\nexport default pizzaSlice.reducer;","map":{"version":3,"names":["createSlice","createAsyncThunk","axios","fetchPizzas","params","sortBy","order","category","search","currentPage","data","get","initialState","items","status","Status","LOADING","pizzaSlice","name","reducers","setItems","state","action","payload","extraReducers","builder","addCase","pending","fulfilled","SUCCESS","rejected","ERROR","actions","reducer"],"sources":["D:/Downloads/Computer-science/MyProject/react-pizza/src/redux/slices/pizzaSlice.ts"],"sourcesContent":["import { createSlice, createAsyncThunk, PayloadAction } from '@reduxjs/toolkit'\nimport axios from 'axios'\nimport { RootState } from '../store'\n\n\n\nexport const fetchPizzas = createAsyncThunk<Pizza[], SearchPizzaParams>(\n    'pizza/fetchPizzasStatus',\n    async (params: SearchPizzaParams) => {\n        const { sortBy, order, category, search, currentPage } = params\n        const { data } = await axios.get<Pizza[]>(\n            `https://636be6427f47ef51e13d6ea3.mockapi.io/items?page=${currentPage}&limit=4&${category}&sortBy=${sortBy}&order=${order}${search}`\n        )\n        return data as Pizza[]\n    }\n)\n\n\n\nconst initialState: PizzaSliceState = {\n    items: [],\n    status: Status.LOADING,\n}\n\nexport const pizzaSlice = createSlice({\n    name: 'pizza',\n    initialState,\n    reducers: {\n        setItems: (state, action: PayloadAction<Pizza[]>) => {\n            state.items = action.payload\n        },\n    },\n    extraReducers: (builder) => {\n        builder.addCase(fetchPizzas.pending, (state) => {\n            state.status = Status.LOADING\n            state.items = []\n        })\n        builder.addCase(fetchPizzas.fulfilled, (state, action) => {\n            state.items = action.payload\n            state.status = Status.SUCCESS\n        })\n        builder.addCase(fetchPizzas.rejected, (state) => {\n            state.status = Status.ERROR\n            state.items = []\n        })\n    },\n    // extraReducers: {\n    //     [fetchPizzas.pending]: (state) => {\n    //         state.status = 'loading'\n    //         state.items = []\n    //     },\n    //     [fetchPizzas.fulfilled]: (state, action) => {\n    //         state.items = action.payload\n    //         state.status = 'success'\n    //     },\n    //     [fetchPizzas.rejected]: (state) => {\n    //         state.status = 'error'\n    //         state.items = []\n    //     },\n    // },\n})\n\n\nexport const { setItems } = pizzaSlice.actions\n\nexport default pizzaSlice.reducer\n"],"mappings":"AAAA,SAASA,WAAW,EAAEC,gBAAgB,QAAuB,kBAAkB;AAC/E,OAAOC,KAAK,MAAM,OAAO;AAKzB,OAAO,MAAMC,WAAW,GAAGF,gBAAgB,CACvC,yBAAyB,EACzB,MAAOG,MAAyB,IAAK;EACjC,MAAM;IAAEC,MAAM;IAAEC,KAAK;IAAEC,QAAQ;IAAEC,MAAM;IAAEC;EAAY,CAAC,GAAGL,MAAM;EAC/D,MAAM;IAAEM;EAAK,CAAC,GAAG,MAAMR,KAAK,CAACS,GAAG,CAC3B,0DAAyDF,WAAY,YAAWF,QAAS,WAAUF,MAAO,UAASC,KAAM,GAAEE,MAAO,EAAC,CACvI;EACD,OAAOE,IAAI;AACf,CAAC,CACJ;AAID,MAAME,YAA6B,GAAG;EAClCC,KAAK,EAAE,EAAE;EACTC,MAAM,EAAEC,MAAM,CAACC;AACnB,CAAC;AAED,OAAO,MAAMC,UAAU,GAAGjB,WAAW,CAAC;EAClCkB,IAAI,EAAE,OAAO;EACbN,YAAY;EACZO,QAAQ,EAAE;IACNC,QAAQ,EAAE,CAACC,KAAK,EAAEC,MAA8B,KAAK;MACjDD,KAAK,CAACR,KAAK,GAAGS,MAAM,CAACC,OAAO;IAChC;EACJ,CAAC;EACDC,aAAa,EAAGC,OAAO,IAAK;IACxBA,OAAO,CAACC,OAAO,CAACvB,WAAW,CAACwB,OAAO,EAAGN,KAAK,IAAK;MAC5CA,KAAK,CAACP,MAAM,GAAGC,MAAM,CAACC,OAAO;MAC7BK,KAAK,CAACR,KAAK,GAAG,EAAE;IACpB,CAAC,CAAC;IACFY,OAAO,CAACC,OAAO,CAACvB,WAAW,CAACyB,SAAS,EAAE,CAACP,KAAK,EAAEC,MAAM,KAAK;MACtDD,KAAK,CAACR,KAAK,GAAGS,MAAM,CAACC,OAAO;MAC5BF,KAAK,CAACP,MAAM,GAAGC,MAAM,CAACc,OAAO;IACjC,CAAC,CAAC;IACFJ,OAAO,CAACC,OAAO,CAACvB,WAAW,CAAC2B,QAAQ,EAAGT,KAAK,IAAK;MAC7CA,KAAK,CAACP,MAAM,GAAGC,MAAM,CAACgB,KAAK;MAC3BV,KAAK,CAACR,KAAK,GAAG,EAAE;IACpB,CAAC,CAAC;EACN;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;AACJ,CAAC,CAAC;;AAGF,OAAO,MAAM;EAAEO;AAAS,CAAC,GAAGH,UAAU,CAACe,OAAO;AAE9C,eAAef,UAAU,CAACgB,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}